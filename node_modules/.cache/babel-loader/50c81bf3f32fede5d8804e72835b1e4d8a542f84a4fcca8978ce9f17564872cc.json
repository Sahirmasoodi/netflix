{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNowPlayingMovies } from \"../utils/store/moviesSlice\";\nimport { API_OPTIONS } from \"../services/urlsservice\";\nimport { useEffect } from \"react\";\nconst useNowPlayingMovies = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const getData = async () => {\n    try {\n      const response = await fetch(\"https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1\", API_OPTIONS);\n      const data = await response.json();\n      //   console.log(data.results); \n      dispatch(addNowPlayingMovies(data === null || data === void 0 ? void 0 : data.results));\n    } catch (error) {\n      console.error(\"Error fetching now playing movies:\", error);\n    }\n  };\n  _s(useEffect(_s(() => {\n    _s();\n    getData();\n    const selector = useSelector(state => state.movies.nowPlayingMovies);\n  }, \"agytgViX0Myi+MHshvgW7nSJ69E=\", false, function () {\n    return [useSelector];\n  }), [getData]), \"agytgViX0Myi+MHshvgW7nSJ69E=\", false, function () {\n    return [useSelector];\n  });\n};\n_s2(useNowPlayingMovies, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\nexport default useNowPlayingMovies;","map":{"version":3,"names":["useDispatch","useSelector","addNowPlayingMovies","API_OPTIONS","useEffect","useNowPlayingMovies","_s2","_s","$RefreshSig$","dispatch","getData","response","fetch","data","json","results","error","console","selector","state","movies","nowPlayingMovies"],"sources":["/Users/sahirmasoodi/Desktop/netflix-gpt/src/hooks/useNowPlayingMovies.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { addNowPlayingMovies } from \"../utils/store/moviesSlice\";\nimport { API_OPTIONS } from \"../services/urlsservice\";\nimport { useEffect } from \"react\";\n\nconst useNowPlayingMovies = () => {\n  const dispatch = useDispatch();\n\n  const getData = async () => {\n    try {\n      const response = await fetch(\n        \"https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1\",\n        API_OPTIONS\n      );\n      const data = await response.json();\n    //   console.log(data.results); \n      dispatch(addNowPlayingMovies(data?.results));\n    } catch (error) {\n      console.error(\"Error fetching now playing movies:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  const selector = useSelector(state=>state.movies.nowPlayingMovies)\n\n  }, [getData]);\n};\n\nexport default useNowPlayingMovies;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,SAAS,QAAQ,OAAO;AAEjC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAChC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sEAAsE,EACtET,WACF,CAAC;MACD,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpC;MACEL,QAAQ,CAACP,mBAAmB,CAACW,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,OAAO,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAEDT,EAAA,CAAAH,SAAS,CAAAG,EAAA,CAAC,MAAM;IAAAA,EAAA;IACdG,OAAO,CAAC,CAAC;IACX,MAAMQ,QAAQ,GAAGjB,WAAW,CAACkB,KAAK,IAAEA,KAAK,CAACC,MAAM,CAACC,gBAAgB,CAAC;EAElE,CAAC;IAAA,QAFgBpB,WAAW;EAAA,IAEzB,CAACS,OAAO,CAAC,CAAC;IAAA,QAFIT,WAAW;EAAA;AAG9B,CAAC;AAACK,GAAA,CAtBID,mBAAmB;EAAA,QACNL,WAAW;AAAA;AAuB9B,eAAeK,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}