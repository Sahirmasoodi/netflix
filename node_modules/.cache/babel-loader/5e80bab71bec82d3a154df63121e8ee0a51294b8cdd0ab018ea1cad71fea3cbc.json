{"ast":null,"code":"var _jsxFileName = \"/Users/sahirmasoodi/Desktop/netflix-gpt/src/components/gpt/GptSearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport useSearchMovies from \"../../hooks/useSearchMovies\";\nimport { API_OPTIONS } from \"../../services/urlsservice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GptSearchBar = () => {\n  _s();\n  let reference = useRef(null);\n  let movie;\n  async function handleGptSearch() {\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?&query=${reference.current.value}&include_adult=false&language=en-US&page=1`, API_OPTIONS);\n    const data = await response.json();\n    console.log(data);\n    console.log(reference.current.value);\n  }\n  // useEffect(() => {\n  //   (async () => {\n  //   const response = await fetch(\n  //     `https://api.themoviedb.org/3/search/movie?&query=thor&include_adult=false&language=en-US&page=1`,\n  //     API_OPTIONS\n  //   );\n  //   const data = await response.json();\n  //   console.log(data);\n\n  // })()\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-40 pt-20\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex items-center w-1/3  min-w-72 mx-auto bg-gray-100 rounded-full px-2 py-1 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: reference,\n        type: \"text\",\n        placeholder: \"Search for a movie\",\n        className: \"flex-grow bg-transparent outline-none text-sm text-gray-800 placeholder-gray-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"ml-2 bg-black text-white px-2 py-1 rounded-full hover:bg-black hover:bg-opacity-80 transition\",\n        onClick: handleGptSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(GptSearchBar, \"6Q+sQdFmUF4ra+mL3ZWZslXUdLk=\");\n_c = GptSearchBar;\nexport default GptSearchBar;\nvar _c;\n$RefreshReg$(_c, \"GptSearchBar\");","map":{"version":3,"names":["React","useEffect","useRef","useSearchMovies","API_OPTIONS","jsxDEV","_jsxDEV","GptSearchBar","_s","reference","movie","handleGptSearch","response","fetch","current","value","data","json","console","log","className","children","class","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sahirmasoodi/Desktop/netflix-gpt/src/components/gpt/GptSearchBar.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport useSearchMovies from \"../../hooks/useSearchMovies\";\nimport { API_OPTIONS } from \"../../services/urlsservice\";\n\nconst GptSearchBar = () => {\n  let reference = useRef(null)\n  let movie\n async function handleGptSearch(){\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?&query=${reference.current.value}&include_adult=false&language=en-US&page=1`,\n    API_OPTIONS\n  );\n  const data = await response.json();\n  console.log(data);\n  console.log(reference.current.value);\n  \n  }\n  // useEffect(() => {\n  //   (async () => {\n  //   const response = await fetch(\n  //     `https://api.themoviedb.org/3/search/movie?&query=thor&include_adult=false&language=en-US&page=1`,\n  //     API_OPTIONS\n  //   );\n  //   const data = await response.json();\n  //   console.log(data);\n    \n  // })()\n  // }, []);\n\n\n\n  \n  return (\n    <div className=\"h-40 pt-20\">\n      <div class=\"flex items-center w-1/3  min-w-72 mx-auto bg-gray-100 rounded-full px-2 py-1 shadow-md\">\n        <input\n        ref={reference}\n          type=\"text\"\n          placeholder=\"Search for a movie\"\n          className=\"flex-grow bg-transparent outline-none text-sm text-gray-800 placeholder-gray-500\"\n        />\n        <button class=\"ml-2 bg-black text-white px-2 py-1 rounded-full hover:bg-black hover:bg-opacity-80 transition\" onClick={handleGptSearch}>\n          Search\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GptSearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,IAAIC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC5B,IAAIQ,KAAK;EACV,eAAeC,eAAeA,CAAA,EAAE;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oDAAoDJ,SAAS,CAACK,OAAO,CAACC,KAAK,4CAA4C,EACvHX,WACF,CAAC;IACD,MAAMY,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBE,OAAO,CAACC,GAAG,CAACV,SAAS,CAACK,OAAO,CAACC,KAAK,CAAC;EAEpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAKA,oBACET,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBf,OAAA;MAAKgB,KAAK,EAAC,wFAAwF;MAAAD,QAAA,gBACjGf,OAAA;QACAiB,GAAG,EAAEd,SAAU;QACbe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCL,SAAS,EAAC;MAAkF;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACFvB,OAAA;QAAQgB,KAAK,EAAC,+FAA+F;QAACQ,OAAO,EAAEnB,eAAgB;QAAAU,QAAA,EAAC;MAExI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CA3CID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}