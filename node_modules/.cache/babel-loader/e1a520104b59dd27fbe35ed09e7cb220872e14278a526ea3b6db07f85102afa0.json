{"ast":null,"code":"var _jsxFileName = \"/Users/sahirmasoodi/Desktop/netflix-gpt/src/components/browser-comp/Browser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport BrowserHeader from \"./BrowserHeader\";\nimport useNowPlayingMovies from \"../../hooks/useNowPlayingMovies\";\nimport MainContainer from \"./MainContainer\";\nimport SecondaryContainer from \"./SecondaryContainer\";\nimport usePopularMovies from \"../../hooks/usePopularMovies\";\nimport useTrendingMovies from \"../../hooks/useTrendingMovies\";\nimport useUpcomingMovies from \"../../hooks/useUpcomingMovies\";\nimport BrowserFooter from \"./BrowserFooter\";\nimport { useSelector } from \"react-redux\";\nimport GptPage from \"../gpt/GptPage\";\nimport Shimmer from \"../Shimmer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Browser = () => {\n  _s();\n  let [load, setload] = useState(true);\n  useNowPlayingMovies();\n  usePopularMovies();\n  useTrendingMovies();\n  useUpcomingMovies();\n  let showGpt = useSelector(state => state.gpt.gptSearch);\n  setTimeout(() => {\n    setload(false);\n  }, 3000);\n  if (load) {\n    return /*#__PURE__*/_jsxDEV(Shimmer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(BrowserHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), showGpt ? /*#__PURE__*/_jsxDEV(GptPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SecondaryContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(BrowserFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Browser, \"bomwufXXpzlt1b52FMnJaq6UwTc=\", false, function () {\n  return [useNowPlayingMovies, usePopularMovies, useTrendingMovies, useUpcomingMovies, useSelector];\n});\n_c = Browser;\nexport default Browser;\nvar _c;\n$RefreshReg$(_c, \"Browser\");","map":{"version":3,"names":["React","useState","BrowserHeader","useNowPlayingMovies","MainContainer","SecondaryContainer","usePopularMovies","useTrendingMovies","useUpcomingMovies","BrowserFooter","useSelector","GptPage","Shimmer","jsxDEV","_jsxDEV","Fragment","_Fragment","Browser","_s","load","setload","showGpt","state","gpt","gptSearch","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/sahirmasoodi/Desktop/netflix-gpt/src/components/browser-comp/Browser.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport BrowserHeader from \"./BrowserHeader\";\nimport useNowPlayingMovies from \"../../hooks/useNowPlayingMovies\";\nimport MainContainer from \"./MainContainer\";\nimport SecondaryContainer from \"./SecondaryContainer\";\nimport usePopularMovies from \"../../hooks/usePopularMovies\";\nimport useTrendingMovies from \"../../hooks/useTrendingMovies\";\nimport useUpcomingMovies from \"../../hooks/useUpcomingMovies\";\nimport BrowserFooter from \"./BrowserFooter\";\nimport { useSelector } from \"react-redux\";\nimport GptPage from \"../gpt/GptPage\";\nimport Shimmer from \"../Shimmer\";\n\nconst Browser = () => {\n  let [load, setload] = useState(true);\n  useNowPlayingMovies();\n  usePopularMovies();\n  useTrendingMovies();\n  useUpcomingMovies();\n  let showGpt = useSelector((state) => state.gpt.gptSearch);\n\n  setTimeout(() => {\n    setload(false);\n  }, 3000);\n  if (load) {\n    return <Shimmer />;\n  }\n\n  return (\n    <div className=\"bg-black\">\n      <BrowserHeader />\n      {showGpt ? (\n        <GptPage />\n      ) : (\n        <>\n          <MainContainer />\n          <SecondaryContainer />\n        </>\n      )}\n\n      <BrowserFooter />\n    </div>\n  );\n};\n\nexport default Browser;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,mBAAmB,MAAM,iCAAiC;AACjE,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpCE,mBAAmB,CAAC,CAAC;EACrBG,gBAAgB,CAAC,CAAC;EAClBC,iBAAiB,CAAC,CAAC;EACnBC,iBAAiB,CAAC,CAAC;EACnB,IAAIa,OAAO,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACC,SAAS,CAAC;EAEzDC,UAAU,CAAC,MAAM;IACfL,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC,EAAE,IAAI,CAAC;EACR,IAAID,IAAI,EAAE;IACR,oBAAOL,OAAA,CAACF,OAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EAEA,oBACEf,OAAA;IAAKgB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBjB,OAAA,CAACZ,aAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChBR,OAAO,gBACNP,OAAA,CAACH,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEXf,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA,CAACV,aAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjBf,OAAA,CAACT,kBAAkB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtB,CACH,eAEDf,OAAA,CAACL,aAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACX,EAAA,CA9BID,OAAO;EAAA,QAEXd,mBAAmB,EACnBG,gBAAgB,EAChBC,iBAAiB,EACjBC,iBAAiB,EACHE,WAAW;AAAA;AAAAsB,EAAA,GANrBf,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}