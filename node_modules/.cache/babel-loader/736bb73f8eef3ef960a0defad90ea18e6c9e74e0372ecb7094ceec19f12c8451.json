{"ast":null,"code":"var _jsxFileName = \"/Users/sahirmasoodi/Desktop/netflix-gpt/src/components/gpt/GptSearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GptSearchBar = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-black\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex items-center bg-transparent border ${isFocused ? \"border-green-400 shadow-green-400 shadow-lg\" : \"border-gray-500\"} rounded-full px-4 py-3 w-full max-w-lg transition-all duration-300`,\n      children: [/*#__PURE__*/_jsxDEV(FiSearch, {\n        className: \"text-gray-400 text-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        onFocus: () => setIsFocused(true),\n        onBlur: () => setIsFocused(false),\n        placeholder: \"Ask anything...\",\n        className: \"bg-transparent text-white outline-none ml-3 w-full text-sm placeholder-gray-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSearchTerm(\"\"),\n        className: \"text-gray-400 hover:text-gray-200 text-sm ml-3\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(GptSearchBar, \"HewaAWAxXSNiQiMKNEzqe1Idu5g=\");\n_c = GptSearchBar;\nexport default GptSearchBar;\nvar _c;\n$RefreshReg$(_c, \"GptSearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GptSearchBar","_s","searchTerm","setSearchTerm","isFocused","setIsFocused","className","children","FiSearch","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onFocus","onBlur","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/sahirmasoodi/Desktop/netflix-gpt/src/components/gpt/GptSearchBar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst GptSearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n\n  return (\n    <div className=\"flex justify-center items-center min-h-screen bg-gradient-to-br from-gray-900 via-gray-800 to-black\">\n      <div\n        className={`flex items-center bg-transparent border ${\n          isFocused ? \"border-green-400 shadow-green-400 shadow-lg\" : \"border-gray-500\"\n        } rounded-full px-4 py-3 w-full max-w-lg transition-all duration-300`}\n      >\n        {/* Search Icon */}\n        <FiSearch className=\"text-gray-400 text-xl\" />\n\n        {/* Input Field */}\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => setIsFocused(false)}\n          placeholder=\"Ask anything...\"\n          className=\"bg-transparent text-white outline-none ml-3 w-full text-sm placeholder-gray-500\"\n        />\n\n        {/* Clear Button */}\n        {searchTerm && (\n          <button\n            onClick={() => setSearchTerm(\"\")}\n            className=\"text-gray-400 hover:text-gray-200 text-sm ml-3\"\n          >\n            Clear\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GptSearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACEE,OAAA;IAAKO,SAAS,EAAC,qGAAqG;IAAAC,QAAA,eAClHR,OAAA;MACEO,SAAS,EAAE,2CACTF,SAAS,GAAG,6CAA6C,GAAG,iBAAiB,qEACT;MAAAG,QAAA,gBAGtER,OAAA,CAACS,QAAQ;QAACF,SAAS,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG9Cb,OAAA;QACEc,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEZ,UAAW;QAClBa,QAAQ,EAAGC,CAAC,IAAKb,aAAa,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAAC,IAAI,CAAE;QAClCc,MAAM,EAAEA,CAAA,KAAMd,YAAY,CAAC,KAAK,CAAE;QAClCe,WAAW,EAAC,iBAAiB;QAC7Bd,SAAS,EAAC;MAAiF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CAAC,EAGDV,UAAU,iBACTH,OAAA;QACEsB,OAAO,EAAEA,CAAA,KAAMlB,aAAa,CAAC,EAAE,CAAE;QACjCG,SAAS,EAAC,gDAAgD;QAAAC,QAAA,EAC3D;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CArCID,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}