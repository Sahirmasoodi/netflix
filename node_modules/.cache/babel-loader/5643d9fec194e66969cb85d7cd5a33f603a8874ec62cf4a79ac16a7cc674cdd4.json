{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { addNowPlayingMovies } from \"../utils/store/moviesSlice\";\nimport { API_OPTIONS } from \"../services/urlsservice\";\nimport { useEffect } from \"react\";\nconst useNowPlayingMovies = () => {\n  _s();\n  const dispatch = useDispatch();\n  const getData = async () => {\n    try {\n      var _result;\n      const response = await fetch(\"https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1\", API_OPTIONS);\n      const data = await response.json();\n      console.log(result); // Debugging purposes\n      dispatch(addNowPlayingMovies((_result = result) === null || _result === void 0 ? void 0 : _result.results));\n    } catch (error) {\n      console.error(\"Error fetching now playing movies:\", error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [getData]);\n};\n_s(useNowPlayingMovies, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\nexport default useNowPlayingMovies;","map":{"version":3,"names":["useDispatch","addNowPlayingMovies","API_OPTIONS","useEffect","useNowPlayingMovies","_s","dispatch","getData","_result","response","fetch","data","json","console","log","result","results","error"],"sources":["/Users/sahirmasoodi/Desktop/netflix-gpt/src/hooks/useNowPlayingMovies.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { addNowPlayingMovies } from \"../utils/store/moviesSlice\";\nimport { API_OPTIONS } from \"../services/urlsservice\";\nimport { useEffect } from \"react\";\n\nconst useNowPlayingMovies = () => {\n  const dispatch = useDispatch();\n\n  const getData = async () => {\n    try {\n      const response = await fetch(\n        \"https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1\",\n        API_OPTIONS\n      );\n      const data = await response.json();\n      console.log(result); // Debugging purposes\n      dispatch(addNowPlayingMovies(result?.results));\n    } catch (error) {\n      console.error(\"Error fetching now playing movies:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n};\n\nexport default useNowPlayingMovies;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,SAAS,QAAQ,OAAO;AAEjC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MAAA,IAAAC,OAAA;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sEAAsE,EACtER,WACF,CAAC;MACD,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC;MACrBT,QAAQ,CAACL,mBAAmB,EAAAO,OAAA,GAACO,MAAM,cAAAP,OAAA,uBAANA,OAAA,CAAQQ,OAAO,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdI,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;AACf,CAAC;AAACF,EAAA,CApBID,mBAAmB;EAAA,QACNJ,WAAW;AAAA;AAqB9B,eAAeI,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}