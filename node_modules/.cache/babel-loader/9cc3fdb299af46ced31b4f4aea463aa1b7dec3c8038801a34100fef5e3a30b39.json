{"ast":null,"code":"var _jsxFileName = \"/Users/sahirmasoodi/Desktop/netflix-gpt/src/components/gpt/GptSearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { API_OPTIONS } from \"../../services/urlsservice\";\nimport { useDispatch } from \"react-redux\";\nimport { addSearchMovies } from \"../../utils/store/gptSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GptSearchBar = () => {\n  _s();\n  let reference = useRef(null);\n  let dispatch = useDispatch();\n  async function handleGptSearch() {\n    const movieResponse = await fetch(`https://api.themoviedb.org/3/search/movie?&query=${reference.current.value}&include_adult=false&language=en-US&page=1`, API_OPTIONS);\n    const movies = await movieResponse.json();\n    dispatch(addSearchMovies(movies));\n    co;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-40 pt-20\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center w-1/3  min-w-72 mx-auto bg-gray-100 rounded-full px-2 py-1 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: reference,\n        type: \"text\",\n        placeholder: \"Search for a movie\",\n        className: \"flex-grow bg-transparent outline-none text-sm text-gray-800 placeholder-gray-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-2 bg-black text-white px-2 py-1 rounded-full hover:bg-black hover:bg-opacity-80 transition\",\n        onClick: handleGptSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(GptSearchBar, \"jkmmIHCVZWwBZSMYYqtwwvdNek4=\", false, function () {\n  return [useDispatch];\n});\n_c = GptSearchBar;\nexport default GptSearchBar;\nvar _c;\n$RefreshReg$(_c, \"GptSearchBar\");","map":{"version":3,"names":["React","useRef","API_OPTIONS","useDispatch","addSearchMovies","jsxDEV","_jsxDEV","GptSearchBar","_s","reference","dispatch","handleGptSearch","movieResponse","fetch","current","value","movies","json","co","className","children","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sahirmasoodi/Desktop/netflix-gpt/src/components/gpt/GptSearchBar.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { API_OPTIONS } from \"../../services/urlsservice\";\nimport { useDispatch } from \"react-redux\";\nimport { addSearchMovies } from \"../../utils/store/gptSlice\";\n\nconst GptSearchBar = () => {\n  let reference = useRef(null)\n  let dispatch = useDispatch()\n async function handleGptSearch(){\n  const movieResponse = await fetch(\n    `https://api.themoviedb.org/3/search/movie?&query=${reference.current.value}&include_adult=false&language=en-US&page=1`,\n    API_OPTIONS\n  );\n  const movies = await movieResponse.json();\n   dispatch(addSearchMovies(movies))\n\n   co\n  \n  }\n \n\n  return (\n    <div className=\"h-40 pt-20\">\n      <div className=\"flex items-center w-1/3  min-w-72 mx-auto bg-gray-100 rounded-full px-2 py-1 shadow-md\">\n        <input\n        ref={reference}\n          type=\"text\"\n          placeholder=\"Search for a movie\"\n          className=\"flex-grow bg-transparent outline-none text-sm text-gray-800 placeholder-gray-500\"\n        />\n        <button className=\"ml-2 bg-black text-white px-2 py-1 rounded-full hover:bg-black hover:bg-opacity-80 transition\" onClick={handleGptSearch}>\n          Search\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GptSearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,IAAIC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC5B,IAAIS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC7B,eAAeQ,eAAeA,CAAA,EAAE;IAC/B,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAC/B,oDAAoDJ,SAAS,CAACK,OAAO,CAACC,KAAK,4CAA4C,EACvHb,WACF,CAAC;IACD,MAAMc,MAAM,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,CAAC;IACxCP,QAAQ,CAACN,eAAe,CAACY,MAAM,CAAC,CAAC;IAEjCE,EAAE;EAEH;EAGA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBd,OAAA;MAAKa,SAAS,EAAC,wFAAwF;MAAAC,QAAA,gBACrGd,OAAA;QACAe,GAAG,EAAEZ,SAAU;QACba,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCJ,SAAS,EAAC;MAAkF;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACFrB,OAAA;QAAQa,SAAS,EAAC,+FAA+F;QAACS,OAAO,EAAEjB,eAAgB;QAAAS,QAAA,EAAC;MAE5I;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BID,YAAY;EAAA,QAEDJ,WAAW;AAAA;AAAA0B,EAAA,GAFtBtB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}